server:
  port: 4550

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

springdoc:
  writer-with-order-by-keys: true
  show-actuator: true
  paths-to-exclude:
    - /info
    - /health/*
  api-docs:
    version: openapi_3_0

spring:
  config:
    import: "optional:configtree:/mnt/secrets/pre-hmctskv/"
  application:
    name: Spring Boot Template
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DATABASE:api}${DB_OPTIONS:}
    username: ${POSTGRES_USER:pre}
    password: ${POSTGRES_PASSWORD:pre}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: PreHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
    jpa:
      hibernate:
        ddl-auto: none
      database-platform: org.hibernate.dialect.PostgreSQLDialect
      properties:
        hibernate:
          default_schema: ${spring.datasource.schema}
          dialect: org.hibernate.dialect.PostgreSQLDialect
          globally_quoted_identifiers: true
          jdbc:
            lob:
              # silence the 'wall-of-text' - unnecessary exception throw about blob types
              non_contextual_creation: true
      open-in-view: true # https://www.baeldung.com/spring-open-session-in-view may want to disable

azure:
  application-insights:
    instrumentation-key: ${APPINSIGHTS_INSTRUMENTATIONKEY:00000000-0000-0000-0000-000000000000}
  ingestStorage:
    accountName: ${AZURE_INGEST_SA:}
    connectionString: ${AZURE_INGEST_SA_CONNECTION_STRING:}
  finalStorage:
    accountName: ${AZURE_FINAL_SA:}
    connectionString: ${AZURE_FINAL_SA_CONNECTION_STRING:}
  managedIdentityClientId: ${AZURE_CLIENT_ID:}
  tenantId: ${AZURE_TENANT_ID:}


hibernate:
  show_sql: true

dbMigration:
  # When true, the app will run DB migration on startup.
  # Otherwise, it will just check if all migrations have been applied (and fail to start if not).
  runOnStartup: ${RUN_DB_MIGRATION_ON_STARTUP:true}

testing-support-endpoints:
  enabled: ${TESTING_SUPPORT_ENDPOINTS_ENABLED:false}

mediakind:
  subscription: ${MEDIA_KIND_SUBSCRIPTION:pre-mediakind-stg}
  subscription-id: ${MEDIA_KIND_SUBSCRIPTION_ID:}
  api: https://api.mk.io/api/ams/${MEDIA_KIND_SUBSCRIPTION:}/
  accountsApi: https://api.mk.io/api/accounts/${MEDIA_KIND_CUSTOMER_ID:}
  token: ${MEDIA_KIND_TOKEN:}
  issuer: ${ISSUER:https://sts.windows.net/531ff96d-0ae9-462a-8d2d-bec7c0b42082/}
  symmetricKey: ${SYMMETRIC_KEY:}

media-service: ${MEDIA_SERVICE:MediaKind}

platform-env: ${PLATFORM_ENV_TAG:Staging}

cron-user-email: ${CRON_USER_EMAIL:test@test.com}

nroUsersFilePath: src/integrationTest/resources/Test_NRO_User_Import.csv

email:
  service: ${EMAIL_SERVICE:GovNotify}
  govNotify:
    key: ${GOV_NOTIFY_API_KEY:}
  enable: true

portal:
  url: ${PORTAL_URL:https://pre-portal.staging.platform.hmcts.net/}

slack:
  webhook: ${SLACK_WEBHOOK_URL:}

editing:
  enable: ${ENABLE_AUTOMATED_EDITING:false}

tasks:
  start-live-event:
    batch-size: ${TASK_START_LIVE_EVENTS_BATCH_SIZE:20}
    poll-interval: ${TASK_START_LIVE_EVENTS_POLL_INTERVAL:2000}
  cleanup-live-events:
    batch-size: ${TASK_CLEANUP_LIVE_EVENTS_BATCH_SIZE:3}
    cooldown: ${TASK_CLEANUP_LIVE_EVENTS_COOLDOWN:60000} # one minute
    job-poll-interval: 10000 # 10 seconds

#logging:
#  level:
#    org.springframework.orm.jpa: DEBUG
#    org.springframework.transaction: DEBUG
#logging:
#  level:
#    uk:
#      gov:
#        hmcts:
#          reform:
#            preapi:
#              actuator:
#                PreApiHealthIndicator: DEBUG
#              component:
#                util:
#                  CommandRunner: DEBUG
#              email:
#                StopLiveEventNotifierFlowClient: DEBUG
#                CaseStateChangeNotifierFlowClient: DEBUG
#              media:
#                MediaKindClient: DEBUG
#                MediaKindAccountsClient: DEBUG
#log4j:
#  logger:
#    org:
#      springframework:
#        jdbc: DEBUG
#        transaction:
#          interceptor: trace
