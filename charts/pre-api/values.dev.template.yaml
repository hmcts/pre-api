java:
  devmemoryLimits: '2048Mi'
  postgresql:
    enabled: true
  environment:
    RUN_DB_MIGRATION_ON_STARTUP: true
    POSTGRES_HOST: "{{ .Release.Name }}-postgresql"
    POSTGRES_DATABASE: "{{ .Values.postgresql.auth.database}}"
    POSTGRES_USER: "{{ .Values.postgresql.auth.username}}"
    POSTGRES_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    TESTING_SUPPORT_ENDPOINTS_ENABLED: true
    APIM_ENABLED: false
    AZURE_MEDIA_SERVICES_ACCOUNT_NAME: preamsstg
    AZURE_RESOURCE_GROUP: pre-stg
    AZURE_SUBSCRIPTION_ID: 74dacd4f-a248-45bb-a2f0-af700dc4cf68
    AZURE_TENANT_ID: 531ff96d-0ae9-462a-8d2d-bec7c0b42082
    MEDIA_KIND_SUBSCRIPTION: pre-mediakind-stg
    PLATFORM_ENV_TAG: Staging
    MEDIA_SERVICE: MediaKind
    AZURE_INGEST_SA: preingestsastg
    AZURE_FINAL_SA: prefinalsastg
  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}


function:
  scaleType: Job
  image: ${IMAGE_NAME}
  aadIdentityName: pre
  pollingInterval: 60 # checks every min
  minReplicaCount: 0
  maxReplicaCount: 2 # todo (more?) only runs up to 2 edits at once
  scalingStrategy: accurate
  keyVaults:
    pre-hmctskv:
      secrets:
        - name: AppInsightsInstrumentationKey
          alias: APPINSIGHTS_INSTRUMENTATIONKEY
        - name: apim-sub-smoketest-primary-key
          alias: APIM_SUB_SMOKETEST_PRIMARY_KEY
        - name: apim-sub-smoketest-secondary-key
          alias: APIM_SUB_SMOKETEST_SECONDARY_KEY
        - name: app-insights-connection-string
        - name: pp-clientid
          alias: AZ_AMS_CLIENT_ID
        - name: client-secret
          alias: AZ_AMS_CLIENT_SECRET
        - name: api-MKIO-TOKEN
          alias: MEDIA_KIND_TOKEN
        - name: finalsa-storage-account-connection-string
          alias: AZURE_FINAL_SA_CONNECTION_STRING
        - name: ingestsa-storage-account-connection-string
          alias: AZURE_INGEST_SA_CONNECTION_STRING
        - name: symmetrickey
          alias: SYMMETRIC_KEY
        - name: pp-authorization
          alias: FLOW_KEY
        - name: flow-http-api
          alias: FLOW_HTTP_API
        - name: flow-case-state-notifier-http-api
          alias: FLOW_CASE_STATE_NOTIFIER_HTTP_API
        - name: flow-close-live-event-email-workflow-id
          alias: FLOW_CLOSE_LIVE_EVENT_EMAIL_WORKFLOW_ID
        - name: flow-close-live-event-email-sig
          alias: FLOW_CLOSE_LIVE_EVENT_EMAIL_SIG
        - name: api-MK-SUBSCRIPTION-ID
          alias: MEDIA_KIND_SUBSCRIPTION_ID
        - name: api-MK-CUSTOMER-ID
          alias: MEDIA_KIND_CUSTOMER_ID
  environment:
    RUN_DB_MIGRATION_ON_STARTUP: true
    POSTGRES_HOST: "{{ .Release.Name }}-postgresql"
    POSTGRES_DATABASE: "{{ .Values.postgresql.auth.database}}"
    POSTGRES_USER: "{{ .Values.postgresql.auth.username}}"
    POSTGRES_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    TESTING_SUPPORT_ENDPOINTS_ENABLED: true
    APIM_ENABLED: false
    AZURE_MEDIA_SERVICES_ACCOUNT_NAME: preamsstg
    AZURE_RESOURCE_GROUP: pre-stg
    AZURE_SUBSCRIPTION_ID: 74dacd4f-a248-45bb-a2f0-af700dc4cf68
    AZURE_TENANT_ID: 531ff96d-0ae9-462a-8d2d-bec7c0b42082
    MEDIA_KIND_SUBSCRIPTION: pre-mediakind-stg
    PLATFORM_ENV_TAG: Staging
    MEDIA_SERVICE: MediaKind
    AZURE_INGEST_SA: preingestsastg
    AZURE_FINAL_SA: prefinalsastg
    DB_CONNECTION_STRING: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}"
  job:
    parallelism: 1
    completions: 1
    activeDeadlineSeconds: 3600 # fails after one hour
  triggers:
    - type: postgres
      connectionFromEnv: DB_CONNECTION_STRING
      query: "SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END AS count FROM edit_requests WHERE status = 'PENDING'"
      targetQueryValue: "0.9"
