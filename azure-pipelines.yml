parameters:
  - name: environment
    displayName: Environment
    type: string
    default: ''
    values:
      - Staging
      - Demo
      - Production

# Runs ad-hoc
trigger:
- none

pool: hmcts-sds-ptl

variables:
  - name: 'environment'
    value: ${{ parameters.environment }}

  - name: 'serviceConnection'
    ${{ if eq(variables['environment'], 'Production') }}:
      value: 'DTS-SHAREDSERVICES-PROD'
    ${{ if eq(variables['environment'], 'Demo') }}:
      value: 'DTS-SHAREDSERVICES-DEMO'
    ${{ else }}:
      value: 'DTS-SHAREDSERVICES-STG'

  - name: 'envShortName'
    ${{ if eq(variables['environment'], 'Production') }}:
      value: 'prod'
    ${{ if eq(variables['environment'], 'Demo') }}:
      value: 'demo'
    ${{ else }}:
      value: 'stg'

steps:
- task: AzureKeyVault@2
  inputs:
    azureSubscription: $(serviceConnection)
    KeyVaultName: 'pre-hmctskv-$(envShortName)'
    SecretsFilter: 'api-POSTGRES-USER,api-POSTGRES-PASS,api-POSTGRES-HOST'
    RunAsPreJob: true

#- task: UsePythonVersion@0
#  displayName: 'Install Python 3.9.x'
#  inputs:
#    versionSpec: '3.9.x'

- script: |
    apt-get update
    apt install python3.12
  displayName: 'Install Python 3.12'

- script: pip install -r bin/migration/requirements.txt
  displayName: 'Install dependencies'

- script: |
    export SOURCE_DB_NAME="pre-pdb-$(envShortName)"
    export SOURCE_DB_USER="$(api-POSTGRES-USER)"
    export SOURCE_DB_PASSWORD="$(api-POSTGRES-PASS)"
    export SOURCE_DB_HOST="$(api-POSTGRES-HOST)"
    export DESTINATION_DB_NAME="api"
    export DESTINATION_DB_USER="$(api-POSTGRES-USER)"
    export DESTINATION_DB_PASSWORD="$(api-POSTGRES-PASS)"
    export DESTINATION_DB_HOST="$(api-POSTGRES-HOST)"
    python3 bin/migration/main.py
  displayName: 'Execute migration script'


