buildscript {
  dependencies {
    classpath("org.flywaydb:flyway-database-postgresql:11.13.2")
  }
}

plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'org.springframework.boot' version '3.5.6'
  id 'org.owasp.dependencycheck' version '12.1.6'
  id 'com.github.ben-manes.versions' version '0.53.0'
  id 'org.sonarqube' version '6.3.1.5724'
  id "io.freefair.lombok" version "9.0.0"
  id 'org.flywaydb.flyway' version '11.13.2'
  id "info.solidsoft.pitest" version '1.15.0'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

configurations {
  functionalTestImplementation.extendsFrom testImplementation
  functionalTestRuntimeOnly.extendsFrom runtimeOnly

  integrationTestImplementation.extendsFrom testImplementation
  integrationTestRuntimeOnly.extendsFrom runtimeOnly

  smokeTestImplementation.extendsFrom testImplementation
  smokeTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

// https://github.com/gradle/gradle/issues/16791
//tasks.withType(JavaExec).configureEach {
//  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
//}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}



task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

checkstyle {
  maxWarnings = 0
  toolVersion = '11.1.0'
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
  toolVersion = "7.17.0"
  sourceSets = [sourceSets.main]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = []
  ruleSetFiles = files("${rootDir}/config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.required = true
    csv.required = false
    html.required = true
  }
}

flyway {
  url = System.getenv('POSTGRES_HOST') ?: "jdbc:postgresql://localhost:5432/api"
  user = System.getenv('POSTGRES_USER') ?: "pre"
  password = System.getenv('POSTGRES_PASSWORD') ?: "pre"
  baselineOnMigrate = true
  baselineVersion = '000'
}

pitest {
    targetClasses = ['uk.gov.hmcts.reform.*']
    junit5PluginVersion = '1.2.1'
    pitestVersion = '1.15.2'
    excludedClasses = [
            'uk.gov.hmcts.reform.preapi.Application.java'
    ]
    useClasspathFile = true
    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation ='build/reports/pitest/fastermutationtestingoutput'
    threads = 15
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml','json')
    outputFormats = ['XML', 'HTML','CSV']
    mutationThreshold = 5
    coverageThreshold = 0
    jvmArgs = ['-Xms1G','-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true
}


task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
  baselineOnMigrate = true
  if (project.hasProperty("dburl")) {
    url = "jdbc:postgresql://${dburl}"
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport
project.tasks['check'].dependsOn integration

def coverageExclusionList = [
  '**uk/gov/hmcts/reform/preapi/data/exception/PendingMigrationScriptException*',
  '**uk/gov/hmcts/reform/preapi/data/migration/FlywayNoOpStrategy*',
  '**uk/gov/hmcts/reform/preapi/controllers/TestingSupportController*',
  '**/uk/gov/hmcts/reform/preapi/Application.java',
]

def duplicateCodeExclusionList = [
  '**uk/gov/hmcts/reform/preapi/entities/**',
  '**uk/gov/hmcts/reform/preapi/controllers/LegacyReportController*',
  '**uk/gov/hmcts/reform/preapi/services/LegacyReportService*'
]

sonarqube {
  properties {
    property "sonar.projectName", "Reform :: pre-api"
    property "sonar.projectKey", "uk.gov.hmcts.reform:pre-api"
    property "sonar.exclusions", coverageExclusionList.join(", ")
    property "sonar.cpd.exclusions", duplicateCodeExclusionList.join(", ")
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = 0
  suppressionFile = 'config/owasp/suppressions.xml'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
  skipConfigurations = [
    "checkstyle",
    "compileOnly",
    "pmd",
    "integrationTest",
    "functionalTest",
    "smokeTest",
    "contractTestRuntimeClasspath",
    "contractTestCompileClasspath"
  ]
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {url 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1' }
}

ext {
  log4JVersion = "2.25.2"
  reformLoggingVersion = "6.1.9"
}

def versions = [
  jackson         : '2.20.0',
  jacksonAnnot    : '2.20',
  junit           : '5.13.4',
  junitPlatform   : '1.13.4',
  reformLogging   : '5.1.5',
  restAssured     : '5.5.6',
  springBoot      : springBoot.class.package.implementationVersion
]

ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
    "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
    "org.junit.platform:junit-platform-engine:${versions.junitPlatform}",
    "org.junit.platform:junit-platform-launcher:${versions.junitPlatform}"
  ]
]


ext['snakeyaml.version'] = '2.0'

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-batch', version: versions.springBoot

  implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.13'
  implementation group: 'org.springframework.hateoas', name: 'spring-hateoas', version: '2.5.1'
  implementation group: 'com.azure.spring', name: 'spring-cloud-azure-starter-active-directory', version: '6.0.0'

  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: reformLoggingVersion
  implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: reformLoggingVersion

  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4JVersion
  implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: log4JVersion
  implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4JVersion
  implementation group: 'org.apache.commons', name: 'commons-exec', version: '1.5.0'

  implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '8.1'

  implementation group: 'org.flywaydb', name: 'flyway-core', version: '11.13.2'
  implementation group: 'org.flywaydb', name: 'flyway-database-postgresql', version: '11.13.2'
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.8'
  implementation group: 'io.hypersistence', name: 'hypersistence-utils-hibernate-63', version: '3.11.0'

  implementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured

  implementation 'io.github.openfeign:feign-gson:13.6'
  implementation 'io.github.openfeign:feign-slf4j:13.6'
  implementation group: 'io.github.openfeign', name: 'feign-jackson', version: '13.6'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.3.0'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-loadbalancer', version: '4.3.0'


  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jacksonAnnot

  implementation group: 'com.opencsv', name: 'opencsv', version: '5.12.0'

  implementation group: 'com.azure', name: 'azure-storage-blob', version: '12.31.3'
  implementation group: 'com.azure', name: 'azure-core-serializer-json-jackson', version: '1.6.1'
  implementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-mediaservices', version: '2.4.0'

  implementation group: 'org.testcontainers', name: 'postgresql', version: '1.21.3'

  implementation group: 'com.auth0', name: 'java-jwt', version: '4.5.0'

  implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: '5.2.1-RELEASE'


  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor('org.hibernate.orm:hibernate-jpamodelgen:6.6.34.Final')
  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  testImplementation 'com.github.hmcts:fortify-client:1.4.10:all'
  testImplementation 'org.springframework.security:spring-security-test:6.5.5'
  testRuntimeOnly('org.springframework.security:spring-security-web:6.5.5')
  testImplementation libraries.junit5

  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }, version: versions.springBoot

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath
  integrationTestImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.21.3'

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
  functionalTestImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  functionalTestImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.21.3'

  smokeTestImplementation sourceSets.main.runtimeClasspath
  smokeTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
  smokeTestImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
}

rootProject.tasks.named("processIntegrationTestResources") {
  duplicatesStrategy = 'include'
}

rootProject.tasks.named("processFunctionalTestResources") {
  duplicatesStrategy = 'include'
}

rootProject.tasks.named("processSmokeTestResources") {
  duplicatesStrategy = 'include'
}

mainClassName = 'uk.gov.hmcts.reform.preapi.Application'

bootJar {
  archiveFileName = "pre-api.jar"

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

bootRun {
  debugOptions {
    port = 2025
  }
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processSmokeTestResources") {
  duplicatesStrategy = 'include'
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}
